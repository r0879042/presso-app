@use "./variables";
@use "./mixins";
@use 'sass:math';

  .quiz{
   .center {
      .question {
        font-size: variables.$big-text-size;
        padding: 5px;
        text-align: center;
        margin-bottom: 20px;
      }

      .answers{
        @media (orientation: landscape) {
          width: 72vw;
        }
      }
      
      .option-card {
          margin-top: variables.$margin;
          text-align: center;

          .option-image {
            height: 10vh;
            width: 10vh;
            border: 1px solid variables.$accent-color;
            border-radius: 50%;
            transition: filter 0.3s ease;
            cursor: pointer;

            &:hover {
              filter: brightness(0.6);
            }
          }

          .option-text {
            font-size: variables.$small-text-size;
            margin: math.div(variables.$margin, 2);

            .option-title {
              @include mixins.respond-to('phone') {
                font-size: variables.$medium-text-size;
                margin-top: variables.$margin;
                margin-bottom: 0px;
              }

            }

            .description {
              color: dimgrey;
            }
          }
      }
    }

    .progress-tracker {
      display: flex;
      justify-content: center;
      align-items: center;

      .tracker-step {
        display: flex;
        align-items: center;

        .tracker-number {
          font-family: 'Courier New', Courier, monospace;
          width: 26px;
          height: 26px;
          border-radius: 50%;
          color: variables.$primary-color;
          background-color: variables.$secondary-color;
          border: 1px solid variables.$accent-color;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: variables.$small-text-size;
          transition: all 0.2s ease;

          @include mixins.respond-to('phone') {
            width: 32px;
            height: 32px;
            font-size: variables.$medium-text-size;
            padding: math.div(variables.$margin, 2);
          }
        }

        &.active .tracker-number {
          background-color: variables.$accent-color;
          border-color: variables.$accent-color;
          color: #fff;
        }

        &.completed .tracker-number {
          background-color: variables.$secondary-color;
          border-width: 2px;
          color: variables.$accent-color;
        }

        .tracker-line {
          border-top: 5px dotted variables.$accent-color;

          @include mixins.respond-to('phone') {
            margin: 0 6px;
          }

          @include mixins.respond-to('tablet') {
            margin: 0 15px;
          }
        }

        &.completed .tracker-line {
              border: 2px solid variables.$accent-color;
        }
      }    
  }

  .question-wrapper {
    position: relative;
    height: 65vh;
    overflow: hidden;
  }

  .slide {
    text-align: center;
    position: absolute;
    inset: 0; 
    display: flex;
    flex-direction: column;  
    justify-content: center;  
    align-items: center;      
    z-index: 2;
  }

  // Slide left (for next)
  .slide-enter-next {
    animation: slideInFromRight 1000ms forwards;
  }

  .slide-exit-next {
    animation: slideOutToLeft 1000ms forwards;
  }

  // Slide right (for prev)
  .slide-enter-prev {
    animation: slideInFromLeft 1000ms forwards;
  }

  .slide-exit-prev {
    animation: slideOutToRight 1000ms forwards;
  }

  @keyframes slideInFromRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideOutToLeft {
    from {
      transform: translateX(0);
      opacity: 1;
    }
    to {
      transform: translateX(-100%);
      opacity: 0;
    }
  }

  @keyframes slideInFromLeft {
    from {
      transform: translateX(-100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideOutToRight {
    from {
      transform: translateX(0);
      opacity: 1;
    }
    to {
      transform: translateX(100%);
      opacity: 0;
    }
  }

  .none-btn {
    border: 1px solid variables.$accent-color;
    color: variables.$primary-color;
    background-color: transparent;
    margin-top: 30px;
    font-family: 'Playfair Display';
    font-weight: normal;

    &:hover {
      color: variables.$primary-color;
      background-color: variables.$secondary-color;
    }
  }

  .full-black{
    font-family: 'Playfair Display';
    color: variables.$accent-color;
    font-size: 2rem;
  }
}